1.运行环境
1.1 Python 3.4以上，本例使用3.6
1.2 Numpy 1.11以上，本例使用1.14 
1.3 安装Anaconda。(http://continuum.io/downloads)其中包含的常用工具包：
    Numpy,Pandas,Jupyter,matplotlib,SciKit-learn和NLTK等。
1.2.6 虚拟环境
    pip install virtualenv
    参数：-p c:\Anaconda3\python.exe 
         --system-site-packages 利用系统已有的工具包。
         --relocatable 为了以后能够在不同的版本或者机器之间移动虚拟环境，将所有环境脚本设置为相对路径。
    virtualenv clone 在实际启动命令所在的路径中，用输入的环境名称创建一个新目录。
    cd clone 移至创建的目录。
    activate 开始使用Python。
    这时在隔离的Python环境中工作，按照工具包，代码。
    pip freeze > requirements.txt 将整个工具包列表记录在文本文件中。将其放到虚拟环境中，只需一个命令可以安装所有工具包
    pip install -r requirements.txt 安装所有工具包。
    deactivate 使用虚拟环境完成脚本编写和实验以后，返回默认系统，退出虚拟环境。
    rd /s /q clone 彻底删除虚拟环境。退出虚拟环境命令以后，使用递归删除命令删除虚拟环境目录即可，windows下的命令。
    rm -r -f clone Linux和Mac系统下的命令。
    使用conda管理虚拟环境
    conda info -e 查看现有工作环境的信息
    conda create -n python34 python=3.4 anaconda 指定Python版本3.4, 安装Anaconda,参数-n命名环境为python34
    activate 激活环境
    conda install -n python34 <包1> <包2> 为环境加装包
    conda list -e > requirements.txt 在已用的环境中用list参数创建列表保存到文件中，
    conda install --file requirements.txt 在目标环境中使用文件安装整个列表中的工具包。
    conda create -n python34 python=3.4 --file requirements.txt 根据文件列表创建环境。
    deactivate 开发环境使用完毕，离开虚拟环境
    conda remove -n python34 --all 彻底删除虚拟环境。
1.2.7 核心工具包
Jupyter 网站：http://jupyter.org/ 安装: pip install jupyter
matplotlib 网站：http://matplotlib.org/ 安装：pip install matploylib

    
